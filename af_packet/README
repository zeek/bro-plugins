
Bro::AF_Packet
==============

This plugin provides native AF_Packet
<http://man7.org/linux/man-pages/man7/packet.7.html> support for Bro.

Installation
------------

Make sure the kernel headers are installed and your kernel supports
PACKET_FANOUT and TPACKET_V3. The following will then compile and
install the af_packet plugin alongside Bro, assuming it can find the
kernel headers in a standard location::

    # ./configure && make && make install

If the headers are installed somewhere non-standard, add
``--with-kernel=<kernel-header-directory>`` to the ``configure``
command. If everything built and installed correctly, you should see
this::

    # bro -N Bro::AF_Packet
    Bro::AF_Packet - Packet acquisition via AF_Packet (dynamic, version 1.0)
    [Packet Source] AF_PacketReader (interface prefix "af_packet"; supports live input)
    [Constant] AF_Packet::buffer_size
    [Constant] AF_Packet::enable_hw_timestamping
    [Constant] AF_Packet::enable_fanout
    [Constant] AF_Packet::fanout_id

Usage
-----

Once installed, you can use AF_Packet interfaces/ports by prefixing them
with ``af_packet::`` on the command line. For example, to use AF_Packet
to monitor interface ``eth0``::

    # bro -i af_packet::eth0

To use AF_Packet, running Bro without root privileges, the Bro processes needs
the CAP_NET_RAW capability. You can set it with the following command (on each
sensor, after broctl install)::

    # setcap cap_net_raw+eip <path_to_bro>/bin/bro

The AF_Packet plugin automatically enables promiscuous mode on the interfaces.
As the plugin is using PACKET_ADD_MEMBERSHIP to enter the promiscuous mode
without interfering others, the PROMISC flag is not touched. To verify that the
interface entered promiscuous mode you can use ``dmesg``.

To adapt the plugin to your needs, you can set a couple of parameters like
buffer size. See scripts/init.bro for the default values.
